import { Event } from "./Event";
import { $getEvent } from "./EventUtil";

/**
 * MouseEvent オブジェクトは、マウスイベントが発生するたびにイベントフローに送出されます。
 * 通常、マウスイベントは、マウスやトラックボールなど、ポインターを使用したユーザー入力デバイスによって生成されます。
 *
 * A MouseEvent object is dispatched into the event flow whenever mouse events occur.
 * A mouse event is usually generated by a user input device,
 * such as a mouse or a trackball, that uses a pointer.
 *
 * @class
 * @memberOf next2d.events
 * @extends  Event
 */
export class MouseEvent extends Event
{
    /**
     * @param {string}  type
     * @param {boolean} [bubbles=true]
     * @param {boolean} [cancelable=false]
     *
     * @constructor
     * @public
     */
    constructor (type: string, bubbles: boolean = true, cancelable: boolean = false)
    {

        super(type, bubbles, cancelable);

        return new Proxy(this, {
            "get": (object: any, name: string) =>
            {
                if (name in object) {
                    return object[name];
                }

                const $event = $getEvent();
                if ($event && name in $event) {
                    // @ts-ignore
                    return $event[name];
                }

                return undefined;
            }
        });

    }

    /**
     * 指定されたクラスのストリングを返します。
     * Returns the string representation of the specified class.
     *
     * @return  {string}
     * @default [class MouseEvent]
     * @method
     * @static
     */
    static toString (): string
    {
        return "[class MouseEvent]";
    }

    /**
     * @description 指定されたクラスの空間名を返します。
     *              Returns the space name of the specified class.
     *
     * @member  {string}
     * @default next2d.events.MouseEvent
     * @const
     * @static
     */
    static get namespace (): string
    {
        return "next2d.events.MouseEvent";
    }

    /**
     * @description 指定されたオブジェクトのストリングを返します。
     *              Returns the string representation of the specified object.
     *
     * @return {string}
     * @method
     * @public
     */
    toString (): string
    {
        return this.formatToString(
            "MouseEvent",
            "type", "bubbles", "cancelable", "eventPhase",
            "localX", "localY", "stageX", "stageY",
            "ctrlKey", "altKey", "shiftKey", "buttonDown",
            "delta", "commandKey", "controlKey", "clickCount"
        );
    }

    /**
     * @description 指定されたオブジェクトの空間名を返します。
     *              Returns the space name of the specified object.
     *
     * @member  {string}
     * @default next2d.events.MouseEvent
     * @const
     * @public
     */
    get namespace (): string
    {
        return "next2d.events.MouseEvent";
    }

    /**
     * @description click イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a click event object.
     *
     * @return {string}
     * @default click
     * @const
     * @static
     */
    static get CLICK (): string
    {
        return "click";
    }

    /**
     * @description dblclick イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a dblclick event object.
     *
     * @return {string}
     * @default dblclick
     * @const
     * @static
     */
    static get DOUBLE_CLICK (): string
    {
        return "dblclick";
    }

    /**
     * @description mouseDown イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a mouseDown event object.
     *
     * @return {string}
     * @default mouseDown
     * @const
     * @static
     */
    static get MOUSE_DOWN (): string
    {
        return "mouseDown";
    }

    /**
     * @description mouseMove イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a mouseMove event object.
     *
     * @return {string}
     * @default mouseMove
     * @const
     * @static
     */
    static get MOUSE_MOVE (): string
    {
        return "mouseMove";
    }

    /**
     * @description mouseOut イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a mouseOut event object.
     *
     * @return {string}
     * @default mouseOut
     * @const
     * @static
     */
    static get MOUSE_OUT (): string
    {
        return "mouseOut";
    }

    /**
     * @description mouseOver イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a mouseOver event object.
     *
     * @return {string}
     * @default mouseOver
     * @const
     * @static
     */
    static get MOUSE_OVER (): string
    {
        return "mouseOver";
    }

    /**
     * @description mouseUp イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a mouseUp event object.
     *
     * @return {string}
     * @default mouseUp
     * @const
     * @static
     */
    static get MOUSE_UP (): string
    {
        return "mouseUp";
    }

    /**
     * @description mouseWheel イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a mouseWheel event object.
     *
     * @return {string}
     * @default mouseWheel
     * @const
     * @static
     */
    static get MOUSE_WHEEL (): string
    {
        return "mouseWheel";
    }

    /**
     * @description rollOut イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a rollOut event object.
     *
     * @return {string}
     * @default rollOut
     * @const
     * @static
     */
    static get ROLL_OUT (): string
    {
        return "rollOut";
    }

    /**
     * @description rollOver イベントオブジェクトの type プロパティ値を定義します。
     *              Defines the value of the type property of a rollOver event object.
     *
     * @return {string}
     * @default rollOver
     * @const
     * @static
     */
    static get ROLL_OVER (): string
    {
        return "rollOver";
    }
}